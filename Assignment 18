 Create a zoo.py file first. Define the hours() function, which prints the string &#39;Open 9-5 daily&#39;.
Then, use the interactive interpreter to import the zoo module and call its hours() function.

Ans.In zoo.py:

def hours():
    print('Open 9-5 daily')

In the interactive interpreter:

>>> import zoo
>>> zoo.hours()
Open 9-5 daily

2. In the interactive interpreter, import the zoo module as menagerie and call its hours() function.

Ans.ยง Code

import zoo as menagerie
menagerie.hours()

The zoo is open 9am-5pm every day.

4. Import the hours() function as info and call it.

Ans.import hours

info()

3. Using the interpreter, explicitly import and call the hours() function from zoo.

Ans. from zoo import hours

hours()

5. Create a plain dictionary with the key-value pairs &#39;a&#39;: 1, &#39;b&#39;: 2, and &#39;c&#39;: 3, and print it out.

my_dict = {'a': 1, 'b': 2, 'c': 3}

print(my_dict)

6.Make an OrderedDict called fancy from the same pairs listed in 5 and print it. Did it print in the
same order as plain?

from collections import OrderedDict

fancy = OrderedDict([('pear', 'green'), ('apple', 'red'), ('banana', 'yellow')])

print(fancy)

# Output: OrderedDict([('pear', 'green'), ('apple', 'red'), ('banana', 'yellow')])

# Yes, the order is the same as plain.

7. Make a default dictionary called dict_of_lists and pass it the argument list. Make the list
dict_of_lists[&#39;a&#39;] and append the value &#39;something for a&#39; to it in one assignment. Print
dict_of_lists[&#39;a&#39;].

list = [1,2,3]
dict_of_lists = {'a': list}
dict_of_lists['a'].append('something for a')
print(dict_of_lists['a']) # [1, 2, 3, 'something for a']